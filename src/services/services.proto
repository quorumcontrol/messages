syntax = "proto3";
package services;

option go_package = "github.com/quorumcontrol/messages/build/go/services";

import "signatures/signatures.proto";
import "transactions/transactions.proto";

// This is the message we currently refer to as "Transaction" at the tupelo level
message AddBlockRequest {
  bytes object_id = 1;
  bytes previous_tip = 2;
  uint64 height = 3;
  bytes new_tip = 4;
  bytes payload = 5;
  repeated bytes state = 6;
}

message ReceiveCurrentStateSnapshot {
  bytes payload = 1;
}

message RequestCurrentStateSnapshot {
  // no payload
}

message Ping {
  string msg = 1;
}

message Pong {
  string msg = 1;
}

message Credentials {
  string wallet_name = 1;
  string pass_phrase = 2;
}

message SerializableChainTree {
  repeated bytes dag = 1;
  map<string, signatures.Signature> signatures = 2;
  // tip is a string because of compatability with the javascript layer
  // which cannot seem to parse a golang cid.Bytes()
  string tip = 3;
}

message RegisterWalletRequest {
  Credentials creds = 1;
}

message RegisterWalletResponse {
  string wallet_name = 1;
}

message StorageAdapterConfigForBadger {
  string path = 1;
}

message StorageAdapterConfigForIpld {
  string path = 1;
  string address = 2;
  bool offline = 3;
}

message StorageAdapterConfig {
  oneof adapter_config {
    StorageAdapterConfigForBadger badger = 1;
    StorageAdapterConfigForIpld ipld = 2;
  }
}

message GenerateChainRequest {
  Credentials creds = 1;
  string key_addr = 2;
  StorageAdapterConfig storage_adapter = 3;
}

message GenerateChainResponse {
  string chain_id = 1;
}

message ExportChainRequest {
  Credentials creds = 1;
  string chain_id = 2;
}

message ExportChainResponse {
  string chain_tree = 1;
}

message ImportChainRequest {
  Credentials creds = 1;
  // index 2 is a deleted key, intentionally omitted
  string chain_tree = 3;
  StorageAdapterConfig storage_adapter = 4;
  bool skip_validation = 5;
}


message ImportChainResponse {
  string chain_id = 1;
}

message GenerateKeyRequest {
  Credentials creds = 1;
}

message GenerateKeyResponse {
  string key_addr = 1;
}

message GetTipRequest {
  Credentials creds = 1;
  string chain_id = 2;
}

message GetTipResponse {
  string tip = 1;
}

message ListChainIdsRequest {
  Credentials creds = 1;
}

message ListChainIdsResponse {
  repeated string chain_ids = 1;
}

message ListKeysRequest {
  Credentials creds = 1;
}

message ListKeysResponse {
  repeated string key_addrs = 1;
}

message SetOwnerRequest {
  Credentials creds = 1;
  string chain_id = 2;
  string key_addr = 3;
  // index 4 is a deleted key and intentionally omitted
  transactions.SetOwnershipPayload payload = 5;
}

message SetOwnerResponse {
  string tip = 1;
}

message SetDataRequest {
  Credentials creds = 1;
  string chain_id = 2;
  string key_addr = 3;
  // indexes 4 and 5 are deleted keys and intentionally omitted
  transactions.SetDataPayload payload = 6;
}

message SetDataResponse {
  string tip = 1;
}

message ResolveRequest {
  Credentials creds = 1;
  string chain_id = 2;
  string path = 3;
}

message ResolveResponse {
  string remaining_path = 1;
  bytes data = 2;
}

message ResolveAtRequest {
  Credentials creds = 1;
  string chain_id = 2;
  string tip = 3;
  string path = 4;
}

message EstablishTokenRequest {
  Credentials creds = 1;
  string chain_id = 2;
  string key_addr = 3;
  // indexes 4 and 5 are deleted keys and intentionally omitted
  transactions.EstablishTokenPayload payload = 6;
}

message EstablishTokenResponse {
  string tip = 1;
}

message MintTokenRequest {
  Credentials creds = 1;
  string chain_id = 2;
  string key_addr = 3;
  // indexes 4 and 5 are deleted keys and intentionally omitted
  transactions.MintTokenPayload payload = 6;
}

message MintTokenResponse {
  string tip = 1;
}

message SendTokenRequest {
  Credentials creds = 1;
  string chain_id = 2;
  string key_addr = 3;
  string token_name = 4;
  string destination_chain_id = 5;
  uint64 amount = 6;
  transactions.SendTokenPayload payload = 7;
}

message SendTokenResponse {
  string send_token = 1;
  string tip = 2;
}

message ReceiveTokenRequest {
  Credentials creds = 1;
  string chain_id = 2;
  string key_addr = 3;
  string token_payload = 4;
}

message ReceiveTokenResponse {
  string tip = 1;
}

message GetTokenBalanceRequest {
  Credentials creds = 1;
  string chain_id = 2;
  string token_name = 3;
}

message GetTokenBalanceResponse { uint64 amount = 1; }

message PlayTransactionsRequest {
  Credentials creds = 1;
  string chain_id = 2;
  string key_addr = 3;
  repeated transactions.Transaction transactions = 4;
}

message PlayTransactionsResponse {
  string tip = 1;
}

service WalletRPCService {
  rpc Register (RegisterWalletRequest) returns (RegisterWalletResponse);
  rpc GenerateKey (GenerateKeyRequest) returns (GenerateKeyResponse);
  rpc CreateChainTree (GenerateChainRequest) returns (GenerateChainResponse);
  rpc ExportChainTree (ExportChainRequest) returns (ExportChainResponse);
  rpc ImportChainTree (ImportChainRequest) returns (ImportChainResponse);
  rpc GetTip (GetTipRequest) returns (GetTipResponse);
  rpc ListChainIds (ListChainIdsRequest) returns (ListChainIdsResponse);
  rpc ListKeys (ListKeysRequest) returns (ListKeysResponse);
  rpc SetOwner (SetOwnerRequest) returns (SetOwnerResponse);
  rpc SetData (SetDataRequest) returns (SetDataResponse);
  rpc Resolve (ResolveRequest) returns (ResolveResponse);
  rpc ResolveAt (ResolveAtRequest) returns (ResolveResponse);
  rpc EstablishToken (EstablishTokenRequest) returns (EstablishTokenResponse);
  rpc MintToken (MintTokenRequest) returns (MintTokenResponse);
  rpc SendToken (SendTokenRequest) returns (SendTokenResponse);
  rpc ReceiveToken (ReceiveTokenRequest) returns (ReceiveTokenResponse);
  rpc PlayTransactions (PlayTransactionsRequest) returns (PlayTransactionsResponse);
}
