// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config/config.proto

package config

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PublicKeySet struct {
	VerKeyHex            string   `protobuf:"bytes,1,opt,name=ver_key_hex,json=verKeyHex,proto3" json:"ver_key_hex,omitempty"`
	DestKeyHex           string   `protobuf:"bytes,2,opt,name=dest_key_hex,json=destKeyHex,proto3" json:"dest_key_hex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicKeySet) Reset()         { *m = PublicKeySet{} }
func (m *PublicKeySet) String() string { return proto.CompactTextString(m) }
func (*PublicKeySet) ProtoMessage()    {}
func (*PublicKeySet) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc332a44e926b360, []int{0}
}

func (m *PublicKeySet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicKeySet.Unmarshal(m, b)
}
func (m *PublicKeySet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicKeySet.Marshal(b, m, deterministic)
}
func (m *PublicKeySet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicKeySet.Merge(m, src)
}
func (m *PublicKeySet) XXX_Size() int {
	return xxx_messageInfo_PublicKeySet.Size(m)
}
func (m *PublicKeySet) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicKeySet.DiscardUnknown(m)
}

var xxx_messageInfo_PublicKeySet proto.InternalMessageInfo

func (m *PublicKeySet) GetVerKeyHex() string {
	if m != nil {
		return m.VerKeyHex
	}
	return ""
}

func (m *PublicKeySet) GetDestKeyHex() string {
	if m != nil {
		return m.DestKeyHex
	}
	return ""
}

type NotaryGroup struct {
	Id                   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TransactionToken     string          `protobuf:"bytes,2,opt,name=transaction_token,json=transactionToken,proto3" json:"transaction_token,omitempty"`
	BurnAmount           uint64          `protobuf:"varint,3,opt,name=burn_amount,json=burnAmount,proto3" json:"burn_amount,omitempty"`
	TransactionTopic     string          `protobuf:"bytes,4,opt,name=transaction_topic,json=transactionTopic,proto3" json:"transaction_topic,omitempty"`
	CommitTopic          string          `protobuf:"bytes,5,opt,name=commit_topic,json=commitTopic,proto3" json:"commit_topic,omitempty"`
	ValidatorGenerators  []string        `protobuf:"bytes,6,rep,name=validator_generators,json=validatorGenerators,proto3" json:"validator_generators,omitempty"`
	Transactions         []string        `protobuf:"bytes,7,rep,name=transactions,proto3" json:"transactions,omitempty"`
	Signers              []*PublicKeySet `protobuf:"bytes,8,rep,name=signers,proto3" json:"signers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *NotaryGroup) Reset()         { *m = NotaryGroup{} }
func (m *NotaryGroup) String() string { return proto.CompactTextString(m) }
func (*NotaryGroup) ProtoMessage()    {}
func (*NotaryGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc332a44e926b360, []int{1}
}

func (m *NotaryGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotaryGroup.Unmarshal(m, b)
}
func (m *NotaryGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotaryGroup.Marshal(b, m, deterministic)
}
func (m *NotaryGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotaryGroup.Merge(m, src)
}
func (m *NotaryGroup) XXX_Size() int {
	return xxx_messageInfo_NotaryGroup.Size(m)
}
func (m *NotaryGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_NotaryGroup.DiscardUnknown(m)
}

var xxx_messageInfo_NotaryGroup proto.InternalMessageInfo

func (m *NotaryGroup) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NotaryGroup) GetTransactionToken() string {
	if m != nil {
		return m.TransactionToken
	}
	return ""
}

func (m *NotaryGroup) GetBurnAmount() uint64 {
	if m != nil {
		return m.BurnAmount
	}
	return 0
}

func (m *NotaryGroup) GetTransactionTopic() string {
	if m != nil {
		return m.TransactionTopic
	}
	return ""
}

func (m *NotaryGroup) GetCommitTopic() string {
	if m != nil {
		return m.CommitTopic
	}
	return ""
}

func (m *NotaryGroup) GetValidatorGenerators() []string {
	if m != nil {
		return m.ValidatorGenerators
	}
	return nil
}

func (m *NotaryGroup) GetTransactions() []string {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *NotaryGroup) GetSigners() []*PublicKeySet {
	if m != nil {
		return m.Signers
	}
	return nil
}

func init() {
	proto.RegisterType((*PublicKeySet)(nil), "config.PublicKeySet")
	proto.RegisterType((*NotaryGroup)(nil), "config.NotaryGroup")
}

func init() { proto.RegisterFile("config/config.proto", fileDescriptor_cc332a44e926b360) }

var fileDescriptor_cc332a44e926b360 = []byte{
	// 327 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xcd, 0x4a, 0xf3, 0x40,
	0x18, 0x85, 0x69, 0xda, 0xaf, 0xfd, 0x3a, 0x09, 0xa2, 0xd3, 0x2e, 0xb2, 0xd2, 0xd8, 0x55, 0x40,
	0x48, 0xa8, 0xbd, 0x02, 0xdd, 0x54, 0x28, 0x48, 0x89, 0xae, 0xdc, 0x84, 0x64, 0xf2, 0x9a, 0x0e,
	0x4d, 0xe6, 0x8d, 0xf3, 0x53, 0x9a, 0xdb, 0xf3, 0xca, 0x24, 0x3f, 0x96, 0x8a, 0xae, 0x92, 0x79,
	0xce, 0xc3, 0x19, 0x98, 0x43, 0x66, 0x0c, 0xc5, 0x3b, 0xcf, 0xc3, 0xee, 0x13, 0x54, 0x12, 0x35,
	0xd2, 0x71, 0x77, 0x5a, 0x6c, 0x89, 0xb3, 0x35, 0x69, 0xc1, 0xd9, 0x06, 0xea, 0x17, 0xd0, 0xf4,
	0x9a, 0xd8, 0x07, 0x90, 0xf1, 0x1e, 0xea, 0x78, 0x07, 0x47, 0x77, 0xe0, 0x0d, 0xfc, 0x69, 0x34,
	0x3d, 0x80, 0xdc, 0x40, 0xfd, 0x04, 0x47, 0xea, 0x11, 0x27, 0x03, 0xa5, 0x4f, 0x82, 0xd5, 0x0a,
	0xa4, 0x61, 0x9d, 0xb1, 0xf8, 0xb4, 0x88, 0xfd, 0x8c, 0x3a, 0x91, 0xf5, 0x5a, 0xa2, 0xa9, 0xe8,
	0x05, 0xb1, 0x78, 0xd6, 0x17, 0x59, 0x3c, 0xa3, 0x77, 0xe4, 0x4a, 0xcb, 0x44, 0xa8, 0x84, 0x69,
	0x8e, 0x22, 0xd6, 0xb8, 0x07, 0xd1, 0xd7, 0x5c, 0x9e, 0x05, 0xaf, 0x0d, 0xa7, 0x37, 0xc4, 0x4e,
	0x8d, 0x14, 0x71, 0x52, 0xa2, 0x11, 0xda, 0x1d, 0x7a, 0x03, 0x7f, 0x14, 0x91, 0x06, 0x3d, 0xb4,
	0xe4, 0x77, 0x5b, 0xc5, 0x99, 0x3b, 0xfa, 0xa3, 0xad, 0xe2, 0x8c, 0xde, 0x12, 0x87, 0x61, 0x59,
	0x72, 0xdd, 0x7b, 0xff, 0x5a, 0xcf, 0xee, 0x58, 0xa7, 0x2c, 0xc9, 0xfc, 0x90, 0x14, 0x3c, 0x4b,
	0x34, 0xca, 0x38, 0x07, 0x01, 0xb2, 0xf9, 0x53, 0xee, 0xd8, 0x1b, 0xfa, 0xd3, 0x68, 0x76, 0xca,
	0xd6, 0xa7, 0x88, 0x2e, 0x88, 0x73, 0x76, 0x93, 0x72, 0x27, 0xad, 0xfa, 0x83, 0xd1, 0x80, 0x4c,
	0x14, 0xcf, 0x05, 0x48, 0xe5, 0xfe, 0xf7, 0x86, 0xbe, 0x7d, 0x3f, 0x0f, 0xfa, 0x39, 0xce, 0x5f,
	0x3f, 0xfa, 0x96, 0x1e, 0x57, 0x6f, 0xcb, 0x9c, 0xeb, 0x9d, 0x49, 0x03, 0x86, 0x65, 0xf8, 0x61,
	0x50, 0x9a, 0x92, 0xa1, 0xd0, 0x12, 0x8b, 0xb0, 0x04, 0xa5, 0x92, 0x1c, 0x54, 0x98, 0x1a, 0x5e,
	0x64, 0x61, 0x8e, 0xfd, 0xb2, 0xe9, 0xb8, 0x9d, 0x76, 0xf5, 0x15, 0x00, 0x00, 0xff, 0xff, 0x7b,
	0x68, 0x1e, 0x93, 0xf1, 0x01, 0x00, 0x00,
}
